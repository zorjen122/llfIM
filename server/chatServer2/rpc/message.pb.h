// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_message_2eproto;
namespace message {
class AddFriendReq;
struct AddFriendReqDefaultTypeInternal;
extern AddFriendReqDefaultTypeInternal _AddFriendReq_default_instance_;
class AddFriendRsp;
struct AddFriendRspDefaultTypeInternal;
extern AddFriendRspDefaultTypeInternal _AddFriendRsp_default_instance_;
class AuthFriendReq;
struct AuthFriendReqDefaultTypeInternal;
extern AuthFriendReqDefaultTypeInternal _AuthFriendReq_default_instance_;
class AuthFriendRsp;
struct AuthFriendRspDefaultTypeInternal;
extern AuthFriendRspDefaultTypeInternal _AuthFriendRsp_default_instance_;
class GetChatServerReq;
struct GetChatServerReqDefaultTypeInternal;
extern GetChatServerReqDefaultTypeInternal _GetChatServerReq_default_instance_;
class GetChatServerRsp;
struct GetChatServerRspDefaultTypeInternal;
extern GetChatServerRspDefaultTypeInternal _GetChatServerRsp_default_instance_;
class GetVarifyReq;
struct GetVarifyReqDefaultTypeInternal;
extern GetVarifyReqDefaultTypeInternal _GetVarifyReq_default_instance_;
class GetVarifyRsp;
struct GetVarifyRspDefaultTypeInternal;
extern GetVarifyRspDefaultTypeInternal _GetVarifyRsp_default_instance_;
class LoginReq;
struct LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginRsp;
struct LoginRspDefaultTypeInternal;
extern LoginRspDefaultTypeInternal _LoginRsp_default_instance_;
class RplyFriendReq;
struct RplyFriendReqDefaultTypeInternal;
extern RplyFriendReqDefaultTypeInternal _RplyFriendReq_default_instance_;
class RplyFriendRsp;
struct RplyFriendRspDefaultTypeInternal;
extern RplyFriendRspDefaultTypeInternal _RplyFriendRsp_default_instance_;
class SendChatMsgReq;
struct SendChatMsgReqDefaultTypeInternal;
extern SendChatMsgReqDefaultTypeInternal _SendChatMsgReq_default_instance_;
class SendChatMsgRsp;
struct SendChatMsgRspDefaultTypeInternal;
extern SendChatMsgRspDefaultTypeInternal _SendChatMsgRsp_default_instance_;
class TextChatData;
struct TextChatDataDefaultTypeInternal;
extern TextChatDataDefaultTypeInternal _TextChatData_default_instance_;
class TextChatMsgReq;
struct TextChatMsgReqDefaultTypeInternal;
extern TextChatMsgReqDefaultTypeInternal _TextChatMsgReq_default_instance_;
class TextChatMsgRsp;
struct TextChatMsgRspDefaultTypeInternal;
extern TextChatMsgRspDefaultTypeInternal _TextChatMsgRsp_default_instance_;
}  // namespace message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace message {

// ===================================================================


// -------------------------------------------------------------------

class TextChatData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.TextChatData) */ {
 public:
  inline TextChatData() : TextChatData(nullptr) {}
  ~TextChatData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TextChatData(
      ::google::protobuf::internal::ConstantInitialized);

  inline TextChatData(const TextChatData& from) : TextChatData(nullptr, from) {}
  inline TextChatData(TextChatData&& from) noexcept
      : TextChatData(nullptr, std::move(from)) {}
  inline TextChatData& operator=(const TextChatData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextChatData& operator=(TextChatData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextChatData& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextChatData* internal_default_instance() {
    return reinterpret_cast<const TextChatData*>(
        &_TextChatData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(TextChatData& a, TextChatData& b) { a.Swap(&b); }
  inline void Swap(TextChatData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextChatData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextChatData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TextChatData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TextChatData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TextChatData& from) { TextChatData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TextChatData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.TextChatData"; }

 protected:
  explicit TextChatData(::google::protobuf::Arena* arena);
  TextChatData(::google::protobuf::Arena* arena, const TextChatData& from);
  TextChatData(::google::protobuf::Arena* arena, TextChatData&& from) noexcept
      : TextChatData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgidFieldNumber = 1,
    kMsgcontentFieldNumber = 2,
  };
  // string msgid = 1;
  void clear_msgid() ;
  const std::string& msgid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msgid(Arg_&& arg, Args_... args);
  std::string* mutable_msgid();
  PROTOBUF_NODISCARD std::string* release_msgid();
  void set_allocated_msgid(std::string* value);

  private:
  const std::string& _internal_msgid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msgid(
      const std::string& value);
  std::string* _internal_mutable_msgid();

  public:
  // string msgcontent = 2;
  void clear_msgcontent() ;
  const std::string& msgcontent() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msgcontent(Arg_&& arg, Args_... args);
  std::string* mutable_msgcontent();
  PROTOBUF_NODISCARD std::string* release_msgcontent();
  void set_allocated_msgcontent(std::string* value);

  private:
  const std::string& _internal_msgcontent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msgcontent(
      const std::string& value);
  std::string* _internal_mutable_msgcontent();

  public:
  // @@protoc_insertion_point(class_scope:message.TextChatData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr msgid_;
    ::google::protobuf::internal::ArenaStringPtr msgcontent_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class SendChatMsgRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.SendChatMsgRsp) */ {
 public:
  inline SendChatMsgRsp() : SendChatMsgRsp(nullptr) {}
  ~SendChatMsgRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendChatMsgRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendChatMsgRsp(const SendChatMsgRsp& from) : SendChatMsgRsp(nullptr, from) {}
  inline SendChatMsgRsp(SendChatMsgRsp&& from) noexcept
      : SendChatMsgRsp(nullptr, std::move(from)) {}
  inline SendChatMsgRsp& operator=(const SendChatMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendChatMsgRsp& operator=(SendChatMsgRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendChatMsgRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendChatMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SendChatMsgRsp*>(
        &_SendChatMsgRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SendChatMsgRsp& a, SendChatMsgRsp& b) { a.Swap(&b); }
  inline void Swap(SendChatMsgRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendChatMsgRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendChatMsgRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendChatMsgRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendChatMsgRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendChatMsgRsp& from) { SendChatMsgRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendChatMsgRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.SendChatMsgRsp"; }

 protected:
  explicit SendChatMsgRsp(::google::protobuf::Arena* arena);
  SendChatMsgRsp(::google::protobuf::Arena* arena, const SendChatMsgRsp& from);
  SendChatMsgRsp(::google::protobuf::Arena* arena, SendChatMsgRsp&& from) noexcept
      : SendChatMsgRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 1,
    kFromuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 fromuid = 2;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.SendChatMsgRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class SendChatMsgReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.SendChatMsgReq) */ {
 public:
  inline SendChatMsgReq() : SendChatMsgReq(nullptr) {}
  ~SendChatMsgReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendChatMsgReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendChatMsgReq(const SendChatMsgReq& from) : SendChatMsgReq(nullptr, from) {}
  inline SendChatMsgReq(SendChatMsgReq&& from) noexcept
      : SendChatMsgReq(nullptr, std::move(from)) {}
  inline SendChatMsgReq& operator=(const SendChatMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendChatMsgReq& operator=(SendChatMsgReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendChatMsgReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendChatMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendChatMsgReq*>(
        &_SendChatMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SendChatMsgReq& a, SendChatMsgReq& b) { a.Swap(&b); }
  inline void Swap(SendChatMsgReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendChatMsgReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendChatMsgReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendChatMsgReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendChatMsgReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendChatMsgReq& from) { SendChatMsgReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendChatMsgReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.SendChatMsgReq"; }

 protected:
  explicit SendChatMsgReq(::google::protobuf::Arena* arena);
  SendChatMsgReq(::google::protobuf::Arena* arena, const SendChatMsgReq& from);
  SendChatMsgReq(::google::protobuf::Arena* arena, SendChatMsgReq&& from) noexcept
      : SendChatMsgReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 3,
    kFromuidFieldNumber = 1,
    kTouidFieldNumber = 2,
  };
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int32 fromuid = 1;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 2;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.SendChatMsgReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class RplyFriendRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.RplyFriendRsp) */ {
 public:
  inline RplyFriendRsp() : RplyFriendRsp(nullptr) {}
  ~RplyFriendRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RplyFriendRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline RplyFriendRsp(const RplyFriendRsp& from) : RplyFriendRsp(nullptr, from) {}
  inline RplyFriendRsp(RplyFriendRsp&& from) noexcept
      : RplyFriendRsp(nullptr, std::move(from)) {}
  inline RplyFriendRsp& operator=(const RplyFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RplyFriendRsp& operator=(RplyFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RplyFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const RplyFriendRsp* internal_default_instance() {
    return reinterpret_cast<const RplyFriendRsp*>(
        &_RplyFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(RplyFriendRsp& a, RplyFriendRsp& b) { a.Swap(&b); }
  inline void Swap(RplyFriendRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RplyFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RplyFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RplyFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RplyFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RplyFriendRsp& from) { RplyFriendRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RplyFriendRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.RplyFriendRsp"; }

 protected:
  explicit RplyFriendRsp(::google::protobuf::Arena* arena);
  RplyFriendRsp(::google::protobuf::Arena* arena, const RplyFriendRsp& from);
  RplyFriendRsp(::google::protobuf::Arena* arena, RplyFriendRsp&& from) noexcept
      : RplyFriendRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 1,
    kRplyuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 rplyuid = 2;
  void clear_rplyuid() ;
  ::int32_t rplyuid() const;
  void set_rplyuid(::int32_t value);

  private:
  ::int32_t _internal_rplyuid() const;
  void _internal_set_rplyuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.RplyFriendRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t rplyuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class RplyFriendReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.RplyFriendReq) */ {
 public:
  inline RplyFriendReq() : RplyFriendReq(nullptr) {}
  ~RplyFriendReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RplyFriendReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline RplyFriendReq(const RplyFriendReq& from) : RplyFriendReq(nullptr, from) {}
  inline RplyFriendReq(RplyFriendReq&& from) noexcept
      : RplyFriendReq(nullptr, std::move(from)) {}
  inline RplyFriendReq& operator=(const RplyFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RplyFriendReq& operator=(RplyFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RplyFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RplyFriendReq* internal_default_instance() {
    return reinterpret_cast<const RplyFriendReq*>(
        &_RplyFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(RplyFriendReq& a, RplyFriendReq& b) { a.Swap(&b); }
  inline void Swap(RplyFriendReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RplyFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RplyFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RplyFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RplyFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RplyFriendReq& from) { RplyFriendReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RplyFriendReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.RplyFriendReq"; }

 protected:
  explicit RplyFriendReq(::google::protobuf::Arena* arena);
  RplyFriendReq(::google::protobuf::Arena* arena, const RplyFriendReq& from);
  RplyFriendReq(::google::protobuf::Arena* arena, RplyFriendReq&& from) noexcept
      : RplyFriendReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRplyuidFieldNumber = 1,
    kAgreeFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 rplyuid = 1;
  void clear_rplyuid() ;
  ::int32_t rplyuid() const;
  void set_rplyuid(::int32_t value);

  private:
  ::int32_t _internal_rplyuid() const;
  void _internal_set_rplyuid(::int32_t value);

  public:
  // bool agree = 2;
  void clear_agree() ;
  bool agree() const;
  void set_agree(bool value);

  private:
  bool _internal_agree() const;
  void _internal_set_agree(bool value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.RplyFriendReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t rplyuid_;
    bool agree_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class LoginRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.LoginRsp) */ {
 public:
  inline LoginRsp() : LoginRsp(nullptr) {}
  ~LoginRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginRsp(const LoginRsp& from) : LoginRsp(nullptr, from) {}
  inline LoginRsp(LoginRsp&& from) noexcept
      : LoginRsp(nullptr, std::move(from)) {}
  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRsp& operator=(LoginRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginRsp* internal_default_instance() {
    return reinterpret_cast<const LoginRsp*>(
        &_LoginRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LoginRsp& a, LoginRsp& b) { a.Swap(&b); }
  inline void Swap(LoginRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LoginRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginRsp& from) { LoginRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoginRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.LoginRsp"; }

 protected:
  explicit LoginRsp(::google::protobuf::Arena* arena);
  LoginRsp(::google::protobuf::Arena* arena, const LoginRsp& from);
  LoginRsp(::google::protobuf::Arena* arena, LoginRsp&& from) noexcept
      : LoginRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 3,
    kErrorFieldNumber = 1,
    kUidFieldNumber = 2,
  };
  // string token = 3;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 uid = 2;
  void clear_uid() ;
  ::int32_t uid() const;
  void set_uid(::int32_t value);

  private:
  ::int32_t _internal_uid() const;
  void _internal_set_uid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.LoginRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::int32_t error_;
    ::int32_t uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class LoginReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.LoginReq) */ {
 public:
  inline LoginReq() : LoginReq(nullptr) {}
  ~LoginReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoginReq(const LoginReq& from) : LoginReq(nullptr, from) {}
  inline LoginReq(LoginReq&& from) noexcept
      : LoginReq(nullptr, std::move(from)) {}
  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginReq& operator=(LoginReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
        &_LoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(LoginReq& a, LoginReq& b) { a.Swap(&b); }
  inline void Swap(LoginReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LoginReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginReq& from) { LoginReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoginReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.LoginReq"; }

 protected:
  explicit LoginReq(::google::protobuf::Arena* arena);
  LoginReq(::google::protobuf::Arena* arena, const LoginReq& from);
  LoginReq(::google::protobuf::Arena* arena, LoginReq&& from) noexcept
      : LoginReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // int32 uid = 1;
  void clear_uid() ;
  ::int32_t uid() const;
  void set_uid(::int32_t value);

  private:
  ::int32_t _internal_uid() const;
  void _internal_set_uid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.LoginReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::int32_t uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class GetVarifyRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.GetVarifyRsp) */ {
 public:
  inline GetVarifyRsp() : GetVarifyRsp(nullptr) {}
  ~GetVarifyRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVarifyRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVarifyRsp(const GetVarifyRsp& from) : GetVarifyRsp(nullptr, from) {}
  inline GetVarifyRsp(GetVarifyRsp&& from) noexcept
      : GetVarifyRsp(nullptr, std::move(from)) {}
  inline GetVarifyRsp& operator=(const GetVarifyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVarifyRsp& operator=(GetVarifyRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVarifyRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVarifyRsp* internal_default_instance() {
    return reinterpret_cast<const GetVarifyRsp*>(
        &_GetVarifyRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetVarifyRsp& a, GetVarifyRsp& b) { a.Swap(&b); }
  inline void Swap(GetVarifyRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVarifyRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVarifyRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetVarifyRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVarifyRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVarifyRsp& from) { GetVarifyRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVarifyRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.GetVarifyRsp"; }

 protected:
  explicit GetVarifyRsp(::google::protobuf::Arena* arena);
  GetVarifyRsp(::google::protobuf::Arena* arena, const GetVarifyRsp& from);
  GetVarifyRsp(::google::protobuf::Arena* arena, GetVarifyRsp&& from) noexcept
      : GetVarifyRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmailFieldNumber = 2,
    kCodeFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // string email = 2;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string code = 3;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.GetVarifyRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::int32_t error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class GetVarifyReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.GetVarifyReq) */ {
 public:
  inline GetVarifyReq() : GetVarifyReq(nullptr) {}
  ~GetVarifyReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVarifyReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVarifyReq(const GetVarifyReq& from) : GetVarifyReq(nullptr, from) {}
  inline GetVarifyReq(GetVarifyReq&& from) noexcept
      : GetVarifyReq(nullptr, std::move(from)) {}
  inline GetVarifyReq& operator=(const GetVarifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVarifyReq& operator=(GetVarifyReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVarifyReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVarifyReq* internal_default_instance() {
    return reinterpret_cast<const GetVarifyReq*>(
        &_GetVarifyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetVarifyReq& a, GetVarifyReq& b) { a.Swap(&b); }
  inline void Swap(GetVarifyReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVarifyReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVarifyReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetVarifyReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVarifyReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVarifyReq& from) { GetVarifyReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVarifyReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.GetVarifyReq"; }

 protected:
  explicit GetVarifyReq(::google::protobuf::Arena* arena);
  GetVarifyReq(::google::protobuf::Arena* arena, const GetVarifyReq& from);
  GetVarifyReq(::google::protobuf::Arena* arena, GetVarifyReq&& from) noexcept
      : GetVarifyReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmailFieldNumber = 1,
  };
  // string email = 1;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // @@protoc_insertion_point(class_scope:message.GetVarifyReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      34, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr email_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class GetChatServerRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.GetChatServerRsp) */ {
 public:
  inline GetChatServerRsp() : GetChatServerRsp(nullptr) {}
  ~GetChatServerRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChatServerRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChatServerRsp(const GetChatServerRsp& from) : GetChatServerRsp(nullptr, from) {}
  inline GetChatServerRsp(GetChatServerRsp&& from) noexcept
      : GetChatServerRsp(nullptr, std::move(from)) {}
  inline GetChatServerRsp& operator=(const GetChatServerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChatServerRsp& operator=(GetChatServerRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChatServerRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChatServerRsp* internal_default_instance() {
    return reinterpret_cast<const GetChatServerRsp*>(
        &_GetChatServerRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetChatServerRsp& a, GetChatServerRsp& b) { a.Swap(&b); }
  inline void Swap(GetChatServerRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChatServerRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChatServerRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetChatServerRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChatServerRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChatServerRsp& from) { GetChatServerRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetChatServerRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.GetChatServerRsp"; }

 protected:
  explicit GetChatServerRsp(::google::protobuf::Arena* arena);
  GetChatServerRsp(::google::protobuf::Arena* arena, const GetChatServerRsp& from);
  GetChatServerRsp(::google::protobuf::Arena* arena, GetChatServerRsp&& from) noexcept
      : GetChatServerRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostFieldNumber = 2,
    kPortFieldNumber = 3,
    kTokenFieldNumber = 4,
    kErrorFieldNumber = 1,
  };
  // string host = 2;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // string port = 3;
  void clear_port() ;
  const std::string& port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port(Arg_&& arg, Args_... args);
  std::string* mutable_port();
  PROTOBUF_NODISCARD std::string* release_port();
  void set_allocated_port(std::string* value);

  private:
  const std::string& _internal_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port(
      const std::string& value);
  std::string* _internal_mutable_port();

  public:
  // string token = 4;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.GetChatServerRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::google::protobuf::internal::ArenaStringPtr port_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::int32_t error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class GetChatServerReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.GetChatServerReq) */ {
 public:
  inline GetChatServerReq() : GetChatServerReq(nullptr) {}
  ~GetChatServerReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChatServerReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChatServerReq(const GetChatServerReq& from) : GetChatServerReq(nullptr, from) {}
  inline GetChatServerReq(GetChatServerReq&& from) noexcept
      : GetChatServerReq(nullptr, std::move(from)) {}
  inline GetChatServerReq& operator=(const GetChatServerReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChatServerReq& operator=(GetChatServerReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChatServerReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChatServerReq* internal_default_instance() {
    return reinterpret_cast<const GetChatServerReq*>(
        &_GetChatServerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetChatServerReq& a, GetChatServerReq& b) { a.Swap(&b); }
  inline void Swap(GetChatServerReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChatServerReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChatServerReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetChatServerReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChatServerReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChatServerReq& from) { GetChatServerReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetChatServerReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.GetChatServerReq"; }

 protected:
  explicit GetChatServerReq(::google::protobuf::Arena* arena);
  GetChatServerReq(::google::protobuf::Arena* arena, const GetChatServerReq& from);
  GetChatServerReq(::google::protobuf::Arena* arena, GetChatServerReq&& from) noexcept
      : GetChatServerReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
  };
  // int32 uid = 1;
  void clear_uid() ;
  ::int32_t uid() const;
  void set_uid(::int32_t value);

  private:
  ::int32_t _internal_uid() const;
  void _internal_set_uid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.GetChatServerReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class AuthFriendRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.AuthFriendRsp) */ {
 public:
  inline AuthFriendRsp() : AuthFriendRsp(nullptr) {}
  ~AuthFriendRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthFriendRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthFriendRsp(const AuthFriendRsp& from) : AuthFriendRsp(nullptr, from) {}
  inline AuthFriendRsp(AuthFriendRsp&& from) noexcept
      : AuthFriendRsp(nullptr, std::move(from)) {}
  inline AuthFriendRsp& operator=(const AuthFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthFriendRsp& operator=(AuthFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AuthFriendRsp*>(
        &_AuthFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(AuthFriendRsp& a, AuthFriendRsp& b) { a.Swap(&b); }
  inline void Swap(AuthFriendRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthFriendRsp& from) { AuthFriendRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthFriendRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.AuthFriendRsp"; }

 protected:
  explicit AuthFriendRsp(::google::protobuf::Arena* arena);
  AuthFriendRsp(::google::protobuf::Arena* arena, const AuthFriendRsp& from);
  AuthFriendRsp(::google::protobuf::Arena* arena, AuthFriendRsp&& from) noexcept
      : AuthFriendRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 1,
    kFromuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 fromuid = 2;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AuthFriendRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class AuthFriendReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.AuthFriendReq) */ {
 public:
  inline AuthFriendReq() : AuthFriendReq(nullptr) {}
  ~AuthFriendReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthFriendReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthFriendReq(const AuthFriendReq& from) : AuthFriendReq(nullptr, from) {}
  inline AuthFriendReq(AuthFriendReq&& from) noexcept
      : AuthFriendReq(nullptr, std::move(from)) {}
  inline AuthFriendReq& operator=(const AuthFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthFriendReq& operator=(AuthFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthFriendReq* internal_default_instance() {
    return reinterpret_cast<const AuthFriendReq*>(
        &_AuthFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(AuthFriendReq& a, AuthFriendReq& b) { a.Swap(&b); }
  inline void Swap(AuthFriendReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AuthFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthFriendReq& from) { AuthFriendReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthFriendReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.AuthFriendReq"; }

 protected:
  explicit AuthFriendReq(::google::protobuf::Arena* arena);
  AuthFriendReq(::google::protobuf::Arena* arena, const AuthFriendReq& from);
  AuthFriendReq(::google::protobuf::Arena* arena, AuthFriendReq&& from) noexcept
      : AuthFriendReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromuidFieldNumber = 1,
    kTouidFieldNumber = 2,
  };
  // int32 fromuid = 1;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 2;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AuthFriendReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class AddFriendRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.AddFriendRsp) */ {
 public:
  inline AddFriendRsp() : AddFriendRsp(nullptr) {}
  ~AddFriendRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddFriendRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddFriendRsp(const AddFriendRsp& from) : AddFriendRsp(nullptr, from) {}
  inline AddFriendRsp(AddFriendRsp&& from) noexcept
      : AddFriendRsp(nullptr, std::move(from)) {}
  inline AddFriendRsp& operator=(const AddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddFriendRsp& operator=(AddFriendRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddFriendRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AddFriendRsp*>(
        &_AddFriendRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AddFriendRsp& a, AddFriendRsp& b) { a.Swap(&b); }
  inline void Swap(AddFriendRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddFriendRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddFriendRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddFriendRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddFriendRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddFriendRsp& from) { AddFriendRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddFriendRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.AddFriendRsp"; }

 protected:
  explicit AddFriendRsp(::google::protobuf::Arena* arena);
  AddFriendRsp(::google::protobuf::Arena* arena, const AddFriendRsp& from);
  AddFriendRsp(::google::protobuf::Arena* arena, AddFriendRsp&& from) noexcept
      : AddFriendRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 1,
    kApplyuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 applyuid = 2;
  void clear_applyuid() ;
  ::int32_t applyuid() const;
  void set_applyuid(::int32_t value);

  private:
  ::int32_t _internal_applyuid() const;
  void _internal_set_applyuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddFriendRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t error_;
    ::int32_t applyuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class AddFriendReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.AddFriendReq) */ {
 public:
  inline AddFriendReq() : AddFriendReq(nullptr) {}
  ~AddFriendReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddFriendReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddFriendReq(const AddFriendReq& from) : AddFriendReq(nullptr, from) {}
  inline AddFriendReq(AddFriendReq&& from) noexcept
      : AddFriendReq(nullptr, std::move(from)) {}
  inline AddFriendReq& operator=(const AddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddFriendReq& operator=(AddFriendReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddFriendReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddFriendReq* internal_default_instance() {
    return reinterpret_cast<const AddFriendReq*>(
        &_AddFriendReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AddFriendReq& a, AddFriendReq& b) { a.Swap(&b); }
  inline void Swap(AddFriendReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddFriendReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddFriendReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddFriendReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddFriendReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddFriendReq& from) { AddFriendReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddFriendReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.AddFriendReq"; }

 protected:
  explicit AddFriendReq(::google::protobuf::Arena* arena);
  AddFriendReq(::google::protobuf::Arena* arena, const AddFriendReq& from);
  AddFriendReq(::google::protobuf::Arena* arena, AddFriendReq&& from) noexcept
      : AddFriendReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kDescFieldNumber = 3,
    kIconFieldNumber = 4,
    kNickFieldNumber = 5,
    kApplyuidFieldNumber = 1,
    kSexFieldNumber = 6,
    kTouidFieldNumber = 7,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string desc = 3;
  void clear_desc() ;
  const std::string& desc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_desc(Arg_&& arg, Args_... args);
  std::string* mutable_desc();
  PROTOBUF_NODISCARD std::string* release_desc();
  void set_allocated_desc(std::string* value);

  private:
  const std::string& _internal_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desc(
      const std::string& value);
  std::string* _internal_mutable_desc();

  public:
  // string icon = 4;
  void clear_icon() ;
  const std::string& icon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_icon(Arg_&& arg, Args_... args);
  std::string* mutable_icon();
  PROTOBUF_NODISCARD std::string* release_icon();
  void set_allocated_icon(std::string* value);

  private:
  const std::string& _internal_icon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_icon(
      const std::string& value);
  std::string* _internal_mutable_icon();

  public:
  // string nick = 5;
  void clear_nick() ;
  const std::string& nick() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nick(Arg_&& arg, Args_... args);
  std::string* mutable_nick();
  PROTOBUF_NODISCARD std::string* release_nick();
  void set_allocated_nick(std::string* value);

  private:
  const std::string& _internal_nick() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nick(
      const std::string& value);
  std::string* _internal_mutable_nick();

  public:
  // int32 applyuid = 1;
  void clear_applyuid() ;
  ::int32_t applyuid() const;
  void set_applyuid(::int32_t value);

  private:
  ::int32_t _internal_applyuid() const;
  void _internal_set_applyuid(::int32_t value);

  public:
  // int32 sex = 6;
  void clear_sex() ;
  ::int32_t sex() const;
  void set_sex(::int32_t value);

  private:
  ::int32_t _internal_sex() const;
  void _internal_set_sex(::int32_t value);

  public:
  // int32 touid = 7;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.AddFriendReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr desc_;
    ::google::protobuf::internal::ArenaStringPtr icon_;
    ::google::protobuf::internal::ArenaStringPtr nick_;
    ::int32_t applyuid_;
    ::int32_t sex_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class TextChatMsgRsp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.TextChatMsgRsp) */ {
 public:
  inline TextChatMsgRsp() : TextChatMsgRsp(nullptr) {}
  ~TextChatMsgRsp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TextChatMsgRsp(
      ::google::protobuf::internal::ConstantInitialized);

  inline TextChatMsgRsp(const TextChatMsgRsp& from) : TextChatMsgRsp(nullptr, from) {}
  inline TextChatMsgRsp(TextChatMsgRsp&& from) noexcept
      : TextChatMsgRsp(nullptr, std::move(from)) {}
  inline TextChatMsgRsp& operator=(const TextChatMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextChatMsgRsp& operator=(TextChatMsgRsp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextChatMsgRsp& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextChatMsgRsp* internal_default_instance() {
    return reinterpret_cast<const TextChatMsgRsp*>(
        &_TextChatMsgRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(TextChatMsgRsp& a, TextChatMsgRsp& b) { a.Swap(&b); }
  inline void Swap(TextChatMsgRsp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextChatMsgRsp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextChatMsgRsp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TextChatMsgRsp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TextChatMsgRsp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TextChatMsgRsp& from) { TextChatMsgRsp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TextChatMsgRsp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.TextChatMsgRsp"; }

 protected:
  explicit TextChatMsgRsp(::google::protobuf::Arena* arena);
  TextChatMsgRsp(::google::protobuf::Arena* arena, const TextChatMsgRsp& from);
  TextChatMsgRsp(::google::protobuf::Arena* arena, TextChatMsgRsp&& from) noexcept
      : TextChatMsgRsp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTextmsgsFieldNumber = 4,
    kErrorFieldNumber = 1,
    kFromuidFieldNumber = 2,
    kTouidFieldNumber = 3,
  };
  // repeated .message.TextChatData textmsgs = 4;
  int textmsgs_size() const;
  private:
  int _internal_textmsgs_size() const;

  public:
  void clear_textmsgs() ;
  ::message::TextChatData* mutable_textmsgs(int index);
  ::google::protobuf::RepeatedPtrField<::message::TextChatData>* mutable_textmsgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& _internal_textmsgs() const;
  ::google::protobuf::RepeatedPtrField<::message::TextChatData>* _internal_mutable_textmsgs();
  public:
  const ::message::TextChatData& textmsgs(int index) const;
  ::message::TextChatData* add_textmsgs();
  const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& textmsgs() const;
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 fromuid = 2;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 3;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.TextChatMsgRsp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::message::TextChatData > textmsgs_;
    ::int32_t error_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class TextChatMsgReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:message.TextChatMsgReq) */ {
 public:
  inline TextChatMsgReq() : TextChatMsgReq(nullptr) {}
  ~TextChatMsgReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TextChatMsgReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline TextChatMsgReq(const TextChatMsgReq& from) : TextChatMsgReq(nullptr, from) {}
  inline TextChatMsgReq(TextChatMsgReq&& from) noexcept
      : TextChatMsgReq(nullptr, std::move(from)) {}
  inline TextChatMsgReq& operator=(const TextChatMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextChatMsgReq& operator=(TextChatMsgReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TextChatMsgReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const TextChatMsgReq* internal_default_instance() {
    return reinterpret_cast<const TextChatMsgReq*>(
        &_TextChatMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(TextChatMsgReq& a, TextChatMsgReq& b) { a.Swap(&b); }
  inline void Swap(TextChatMsgReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TextChatMsgReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TextChatMsgReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TextChatMsgReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TextChatMsgReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TextChatMsgReq& from) { TextChatMsgReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TextChatMsgReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "message.TextChatMsgReq"; }

 protected:
  explicit TextChatMsgReq(::google::protobuf::Arena* arena);
  TextChatMsgReq(::google::protobuf::Arena* arena, const TextChatMsgReq& from);
  TextChatMsgReq(::google::protobuf::Arena* arena, TextChatMsgReq&& from) noexcept
      : TextChatMsgReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTextmsgsFieldNumber = 3,
    kFromuidFieldNumber = 1,
    kTouidFieldNumber = 2,
  };
  // repeated .message.TextChatData textmsgs = 3;
  int textmsgs_size() const;
  private:
  int _internal_textmsgs_size() const;

  public:
  void clear_textmsgs() ;
  ::message::TextChatData* mutable_textmsgs(int index);
  ::google::protobuf::RepeatedPtrField<::message::TextChatData>* mutable_textmsgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& _internal_textmsgs() const;
  ::google::protobuf::RepeatedPtrField<::message::TextChatData>* _internal_mutable_textmsgs();
  public:
  const ::message::TextChatData& textmsgs(int index) const;
  ::message::TextChatData* add_textmsgs();
  const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& textmsgs() const;
  // int32 fromuid = 1;
  void clear_fromuid() ;
  ::int32_t fromuid() const;
  void set_fromuid(::int32_t value);

  private:
  ::int32_t _internal_fromuid() const;
  void _internal_set_fromuid(::int32_t value);

  public:
  // int32 touid = 2;
  void clear_touid() ;
  ::int32_t touid() const;
  void set_touid(::int32_t value);

  private:
  ::int32_t _internal_touid() const;
  void _internal_set_touid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:message.TextChatMsgReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::message::TextChatData > textmsgs_;
    ::int32_t fromuid_;
    ::int32_t touid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_message_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetVarifyReq

// string email = 1;
inline void GetVarifyReq::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& GetVarifyReq::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetVarifyReq.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVarifyReq::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetVarifyReq.email)
}
inline std::string* GetVarifyReq::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:message.GetVarifyReq.email)
  return _s;
}
inline const std::string& GetVarifyReq::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void GetVarifyReq::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.Set(value, GetArena());
}
inline std::string* GetVarifyReq::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* GetVarifyReq::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetVarifyReq.email)
  return _impl_.email_.Release();
}
inline void GetVarifyReq::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetVarifyReq.email)
}

// -------------------------------------------------------------------

// GetVarifyRsp

// int32 error = 1;
inline void GetVarifyRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t GetVarifyRsp::error() const {
  // @@protoc_insertion_point(field_get:message.GetVarifyRsp.error)
  return _internal_error();
}
inline void GetVarifyRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.GetVarifyRsp.error)
}
inline ::int32_t GetVarifyRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void GetVarifyRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// string email = 2;
inline void GetVarifyRsp::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& GetVarifyRsp::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetVarifyRsp.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVarifyRsp::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetVarifyRsp.email)
}
inline std::string* GetVarifyRsp::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:message.GetVarifyRsp.email)
  return _s;
}
inline const std::string& GetVarifyRsp::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void GetVarifyRsp::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.Set(value, GetArena());
}
inline std::string* GetVarifyRsp::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* GetVarifyRsp::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetVarifyRsp.email)
  return _impl_.email_.Release();
}
inline void GetVarifyRsp::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetVarifyRsp.email)
}

// string code = 3;
inline void GetVarifyRsp::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& GetVarifyRsp::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetVarifyRsp.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVarifyRsp::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetVarifyRsp.code)
}
inline std::string* GetVarifyRsp::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:message.GetVarifyRsp.code)
  return _s;
}
inline const std::string& GetVarifyRsp::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void GetVarifyRsp::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.Set(value, GetArena());
}
inline std::string* GetVarifyRsp::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* GetVarifyRsp::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetVarifyRsp.code)
  return _impl_.code_.Release();
}
inline void GetVarifyRsp::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetVarifyRsp.code)
}

// -------------------------------------------------------------------

// GetChatServerReq

// int32 uid = 1;
inline void GetChatServerReq::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = 0;
}
inline ::int32_t GetChatServerReq::uid() const {
  // @@protoc_insertion_point(field_get:message.GetChatServerReq.uid)
  return _internal_uid();
}
inline void GetChatServerReq::set_uid(::int32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:message.GetChatServerReq.uid)
}
inline ::int32_t GetChatServerReq::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_;
}
inline void GetChatServerReq::_internal_set_uid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = value;
}

// -------------------------------------------------------------------

// GetChatServerRsp

// int32 error = 1;
inline void GetChatServerRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t GetChatServerRsp::error() const {
  // @@protoc_insertion_point(field_get:message.GetChatServerRsp.error)
  return _internal_error();
}
inline void GetChatServerRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.GetChatServerRsp.error)
}
inline ::int32_t GetChatServerRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void GetChatServerRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// string host = 2;
inline void GetChatServerRsp::clear_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& GetChatServerRsp::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetChatServerRsp.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetChatServerRsp::set_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetChatServerRsp.host)
}
inline std::string* GetChatServerRsp::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:message.GetChatServerRsp.host)
  return _s;
}
inline const std::string& GetChatServerRsp::_internal_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.host_.Get();
}
inline void GetChatServerRsp::_internal_set_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.Set(value, GetArena());
}
inline std::string* GetChatServerRsp::_internal_mutable_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* GetChatServerRsp::release_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetChatServerRsp.host)
  return _impl_.host_.Release();
}
inline void GetChatServerRsp::set_allocated_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetChatServerRsp.host)
}

// string port = 3;
inline void GetChatServerRsp::clear_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.ClearToEmpty();
}
inline const std::string& GetChatServerRsp::port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetChatServerRsp.port)
  return _internal_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetChatServerRsp::set_port(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetChatServerRsp.port)
}
inline std::string* GetChatServerRsp::mutable_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_port();
  // @@protoc_insertion_point(field_mutable:message.GetChatServerRsp.port)
  return _s;
}
inline const std::string& GetChatServerRsp::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_.Get();
}
inline void GetChatServerRsp::_internal_set_port(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.Set(value, GetArena());
}
inline std::string* GetChatServerRsp::_internal_mutable_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.port_.Mutable( GetArena());
}
inline std::string* GetChatServerRsp::release_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetChatServerRsp.port)
  return _impl_.port_.Release();
}
inline void GetChatServerRsp::set_allocated_port(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.port_.IsDefault()) {
          _impl_.port_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetChatServerRsp.port)
}

// string token = 4;
inline void GetChatServerRsp::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& GetChatServerRsp::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.GetChatServerRsp.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetChatServerRsp::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.GetChatServerRsp.token)
}
inline std::string* GetChatServerRsp::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:message.GetChatServerRsp.token)
  return _s;
}
inline const std::string& GetChatServerRsp::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void GetChatServerRsp::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* GetChatServerRsp::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* GetChatServerRsp::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.GetChatServerRsp.token)
  return _impl_.token_.Release();
}
inline void GetChatServerRsp::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.GetChatServerRsp.token)
}

// -------------------------------------------------------------------

// LoginReq

// int32 uid = 1;
inline void LoginReq::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = 0;
}
inline ::int32_t LoginReq::uid() const {
  // @@protoc_insertion_point(field_get:message.LoginReq.uid)
  return _internal_uid();
}
inline void LoginReq::set_uid(::int32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:message.LoginReq.uid)
}
inline ::int32_t LoginReq::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_;
}
inline void LoginReq::_internal_set_uid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = value;
}

// string token = 2;
inline void LoginReq::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& LoginReq::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.LoginReq.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginReq::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.LoginReq.token)
}
inline std::string* LoginReq::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:message.LoginReq.token)
  return _s;
}
inline const std::string& LoginReq::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void LoginReq::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* LoginReq::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* LoginReq::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.LoginReq.token)
  return _impl_.token_.Release();
}
inline void LoginReq::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.LoginReq.token)
}

// -------------------------------------------------------------------

// LoginRsp

// int32 error = 1;
inline void LoginRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t LoginRsp::error() const {
  // @@protoc_insertion_point(field_get:message.LoginRsp.error)
  return _internal_error();
}
inline void LoginRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.LoginRsp.error)
}
inline ::int32_t LoginRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void LoginRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// int32 uid = 2;
inline void LoginRsp::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = 0;
}
inline ::int32_t LoginRsp::uid() const {
  // @@protoc_insertion_point(field_get:message.LoginRsp.uid)
  return _internal_uid();
}
inline void LoginRsp::set_uid(::int32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:message.LoginRsp.uid)
}
inline ::int32_t LoginRsp::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_;
}
inline void LoginRsp::_internal_set_uid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_ = value;
}

// string token = 3;
inline void LoginRsp::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& LoginRsp::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.LoginRsp.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoginRsp::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.LoginRsp.token)
}
inline std::string* LoginRsp::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:message.LoginRsp.token)
  return _s;
}
inline const std::string& LoginRsp::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void LoginRsp::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* LoginRsp::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* LoginRsp::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.LoginRsp.token)
  return _impl_.token_.Release();
}
inline void LoginRsp::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.LoginRsp.token)
}

// -------------------------------------------------------------------

// AddFriendReq

// int32 applyuid = 1;
inline void AddFriendReq::clear_applyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.applyuid_ = 0;
}
inline ::int32_t AddFriendReq::applyuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.applyuid)
  return _internal_applyuid();
}
inline void AddFriendReq::set_applyuid(::int32_t value) {
  _internal_set_applyuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.applyuid)
}
inline ::int32_t AddFriendReq::_internal_applyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.applyuid_;
}
inline void AddFriendReq::_internal_set_applyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.applyuid_ = value;
}

// string name = 2;
inline void AddFriendReq::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AddFriendReq::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.name)
}
inline std::string* AddFriendReq::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.name)
  return _s;
}
inline const std::string& AddFriendReq::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void AddFriendReq::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.name)
  return _impl_.name_.Release();
}
inline void AddFriendReq::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.name)
}

// string desc = 3;
inline void AddFriendReq::clear_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_.ClearToEmpty();
}
inline const std::string& AddFriendReq::desc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.desc)
  return _internal_desc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_desc(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.desc)
}
inline std::string* AddFriendReq::mutable_desc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_desc();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.desc)
  return _s;
}
inline const std::string& AddFriendReq::_internal_desc() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.desc_.Get();
}
inline void AddFriendReq::_internal_set_desc(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.desc_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_desc() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.desc)
  return _impl_.desc_.Release();
}
inline void AddFriendReq::set_allocated_desc(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.desc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.desc_.IsDefault()) {
          _impl_.desc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.desc)
}

// string icon = 4;
inline void AddFriendReq::clear_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.ClearToEmpty();
}
inline const std::string& AddFriendReq::icon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.icon)
  return _internal_icon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_icon(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.icon)
}
inline std::string* AddFriendReq::mutable_icon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_icon();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.icon)
  return _s;
}
inline const std::string& AddFriendReq::_internal_icon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.icon_.Get();
}
inline void AddFriendReq::_internal_set_icon(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.icon_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.icon)
  return _impl_.icon_.Release();
}
inline void AddFriendReq::set_allocated_icon(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.icon_.IsDefault()) {
          _impl_.icon_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.icon)
}

// string nick = 5;
inline void AddFriendReq::clear_nick() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nick_.ClearToEmpty();
}
inline const std::string& AddFriendReq::nick() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.nick)
  return _internal_nick();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddFriendReq::set_nick(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nick_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.AddFriendReq.nick)
}
inline std::string* AddFriendReq::mutable_nick() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nick();
  // @@protoc_insertion_point(field_mutable:message.AddFriendReq.nick)
  return _s;
}
inline const std::string& AddFriendReq::_internal_nick() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nick_.Get();
}
inline void AddFriendReq::_internal_set_nick(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nick_.Set(value, GetArena());
}
inline std::string* AddFriendReq::_internal_mutable_nick() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.nick_.Mutable( GetArena());
}
inline std::string* AddFriendReq::release_nick() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.AddFriendReq.nick)
  return _impl_.nick_.Release();
}
inline void AddFriendReq::set_allocated_nick(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nick_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nick_.IsDefault()) {
          _impl_.nick_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.AddFriendReq.nick)
}

// int32 sex = 6;
inline void AddFriendReq::clear_sex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sex_ = 0;
}
inline ::int32_t AddFriendReq::sex() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.sex)
  return _internal_sex();
}
inline void AddFriendReq::set_sex(::int32_t value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.sex)
}
inline ::int32_t AddFriendReq::_internal_sex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sex_;
}
inline void AddFriendReq::_internal_set_sex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sex_ = value;
}

// int32 touid = 7;
inline void AddFriendReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AddFriendReq::touid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendReq.touid)
  return _internal_touid();
}
inline void AddFriendReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendReq.touid)
}
inline ::int32_t AddFriendReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AddFriendReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// AddFriendRsp

// int32 error = 1;
inline void AddFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t AddFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.error)
  return _internal_error();
}
inline void AddFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.error)
}
inline ::int32_t AddFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void AddFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// int32 applyuid = 2;
inline void AddFriendRsp::clear_applyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.applyuid_ = 0;
}
inline ::int32_t AddFriendRsp::applyuid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.applyuid)
  return _internal_applyuid();
}
inline void AddFriendRsp::set_applyuid(::int32_t value) {
  _internal_set_applyuid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.applyuid)
}
inline ::int32_t AddFriendRsp::_internal_applyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.applyuid_;
}
inline void AddFriendRsp::_internal_set_applyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.applyuid_ = value;
}

// int32 touid = 3;
inline void AddFriendRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AddFriendRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.AddFriendRsp.touid)
  return _internal_touid();
}
inline void AddFriendRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AddFriendRsp.touid)
}
inline ::int32_t AddFriendRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AddFriendRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// RplyFriendReq

// int32 rplyuid = 1;
inline void RplyFriendReq::clear_rplyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rplyuid_ = 0;
}
inline ::int32_t RplyFriendReq::rplyuid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendReq.rplyuid)
  return _internal_rplyuid();
}
inline void RplyFriendReq::set_rplyuid(::int32_t value) {
  _internal_set_rplyuid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendReq.rplyuid)
}
inline ::int32_t RplyFriendReq::_internal_rplyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rplyuid_;
}
inline void RplyFriendReq::_internal_set_rplyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rplyuid_ = value;
}

// bool agree = 2;
inline void RplyFriendReq::clear_agree() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.agree_ = false;
}
inline bool RplyFriendReq::agree() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendReq.agree)
  return _internal_agree();
}
inline void RplyFriendReq::set_agree(bool value) {
  _internal_set_agree(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendReq.agree)
}
inline bool RplyFriendReq::_internal_agree() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.agree_;
}
inline void RplyFriendReq::_internal_set_agree(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.agree_ = value;
}

// int32 touid = 3;
inline void RplyFriendReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t RplyFriendReq::touid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendReq.touid)
  return _internal_touid();
}
inline void RplyFriendReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendReq.touid)
}
inline ::int32_t RplyFriendReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void RplyFriendReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// RplyFriendRsp

// int32 error = 1;
inline void RplyFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t RplyFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendRsp.error)
  return _internal_error();
}
inline void RplyFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendRsp.error)
}
inline ::int32_t RplyFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void RplyFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// int32 rplyuid = 2;
inline void RplyFriendRsp::clear_rplyuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rplyuid_ = 0;
}
inline ::int32_t RplyFriendRsp::rplyuid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendRsp.rplyuid)
  return _internal_rplyuid();
}
inline void RplyFriendRsp::set_rplyuid(::int32_t value) {
  _internal_set_rplyuid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendRsp.rplyuid)
}
inline ::int32_t RplyFriendRsp::_internal_rplyuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rplyuid_;
}
inline void RplyFriendRsp::_internal_set_rplyuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rplyuid_ = value;
}

// int32 touid = 3;
inline void RplyFriendRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t RplyFriendRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.RplyFriendRsp.touid)
  return _internal_touid();
}
inline void RplyFriendRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.RplyFriendRsp.touid)
}
inline ::int32_t RplyFriendRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void RplyFriendRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// SendChatMsgReq

// int32 fromuid = 1;
inline void SendChatMsgReq::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t SendChatMsgReq::fromuid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgReq.fromuid)
  return _internal_fromuid();
}
inline void SendChatMsgReq::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgReq.fromuid)
}
inline ::int32_t SendChatMsgReq::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void SendChatMsgReq::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = value;
}

// int32 touid = 2;
inline void SendChatMsgReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t SendChatMsgReq::touid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgReq.touid)
  return _internal_touid();
}
inline void SendChatMsgReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgReq.touid)
}
inline ::int32_t SendChatMsgReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void SendChatMsgReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// string message = 3;
inline void SendChatMsgReq::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& SendChatMsgReq::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.SendChatMsgReq.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendChatMsgReq::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.SendChatMsgReq.message)
}
inline std::string* SendChatMsgReq::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:message.SendChatMsgReq.message)
  return _s;
}
inline const std::string& SendChatMsgReq::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void SendChatMsgReq::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* SendChatMsgReq::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* SendChatMsgReq::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.SendChatMsgReq.message)
  return _impl_.message_.Release();
}
inline void SendChatMsgReq::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.SendChatMsgReq.message)
}

// -------------------------------------------------------------------

// SendChatMsgRsp

// int32 error = 1;
inline void SendChatMsgRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t SendChatMsgRsp::error() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgRsp.error)
  return _internal_error();
}
inline void SendChatMsgRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgRsp.error)
}
inline ::int32_t SendChatMsgRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void SendChatMsgRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// int32 fromuid = 2;
inline void SendChatMsgRsp::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t SendChatMsgRsp::fromuid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgRsp.fromuid)
  return _internal_fromuid();
}
inline void SendChatMsgRsp::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgRsp.fromuid)
}
inline ::int32_t SendChatMsgRsp::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void SendChatMsgRsp::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = value;
}

// int32 touid = 3;
inline void SendChatMsgRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t SendChatMsgRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.SendChatMsgRsp.touid)
  return _internal_touid();
}
inline void SendChatMsgRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.SendChatMsgRsp.touid)
}
inline ::int32_t SendChatMsgRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void SendChatMsgRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// AuthFriendReq

// int32 fromuid = 1;
inline void AuthFriendReq::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t AuthFriendReq::fromuid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendReq.fromuid)
  return _internal_fromuid();
}
inline void AuthFriendReq::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendReq.fromuid)
}
inline ::int32_t AuthFriendReq::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void AuthFriendReq::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = value;
}

// int32 touid = 2;
inline void AuthFriendReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AuthFriendReq::touid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendReq.touid)
  return _internal_touid();
}
inline void AuthFriendReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendReq.touid)
}
inline ::int32_t AuthFriendReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AuthFriendReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// AuthFriendRsp

// int32 error = 1;
inline void AuthFriendRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t AuthFriendRsp::error() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendRsp.error)
  return _internal_error();
}
inline void AuthFriendRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendRsp.error)
}
inline ::int32_t AuthFriendRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void AuthFriendRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// int32 fromuid = 2;
inline void AuthFriendRsp::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t AuthFriendRsp::fromuid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendRsp.fromuid)
  return _internal_fromuid();
}
inline void AuthFriendRsp::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendRsp.fromuid)
}
inline ::int32_t AuthFriendRsp::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void AuthFriendRsp::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = value;
}

// int32 touid = 3;
inline void AuthFriendRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t AuthFriendRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.AuthFriendRsp.touid)
  return _internal_touid();
}
inline void AuthFriendRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.AuthFriendRsp.touid)
}
inline ::int32_t AuthFriendRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void AuthFriendRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// -------------------------------------------------------------------

// TextChatMsgReq

// int32 fromuid = 1;
inline void TextChatMsgReq::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t TextChatMsgReq::fromuid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgReq.fromuid)
  return _internal_fromuid();
}
inline void TextChatMsgReq::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgReq.fromuid)
}
inline ::int32_t TextChatMsgReq::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void TextChatMsgReq::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = value;
}

// int32 touid = 2;
inline void TextChatMsgReq::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t TextChatMsgReq::touid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgReq.touid)
  return _internal_touid();
}
inline void TextChatMsgReq::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgReq.touid)
}
inline ::int32_t TextChatMsgReq::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void TextChatMsgReq::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// repeated .message.TextChatData textmsgs = 3;
inline int TextChatMsgReq::_internal_textmsgs_size() const {
  return _internal_textmsgs().size();
}
inline int TextChatMsgReq::textmsgs_size() const {
  return _internal_textmsgs_size();
}
inline void TextChatMsgReq::clear_textmsgs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.textmsgs_.Clear();
}
inline ::message::TextChatData* TextChatMsgReq::mutable_textmsgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:message.TextChatMsgReq.textmsgs)
  return _internal_mutable_textmsgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>* TextChatMsgReq::mutable_textmsgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:message.TextChatMsgReq.textmsgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_textmsgs();
}
inline const ::message::TextChatData& TextChatMsgReq::textmsgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatMsgReq.textmsgs)
  return _internal_textmsgs().Get(index);
}
inline ::message::TextChatData* TextChatMsgReq::add_textmsgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::message::TextChatData* _add = _internal_mutable_textmsgs()->Add();
  // @@protoc_insertion_point(field_add:message.TextChatMsgReq.textmsgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& TextChatMsgReq::textmsgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:message.TextChatMsgReq.textmsgs)
  return _internal_textmsgs();
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>&
TextChatMsgReq::_internal_textmsgs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.textmsgs_;
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>*
TextChatMsgReq::_internal_mutable_textmsgs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.textmsgs_;
}

// -------------------------------------------------------------------

// TextChatData

// string msgid = 1;
inline void TextChatData::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_.ClearToEmpty();
}
inline const std::string& TextChatData::msgid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatData.msgid)
  return _internal_msgid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TextChatData::set_msgid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.TextChatData.msgid)
}
inline std::string* TextChatData::mutable_msgid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msgid();
  // @@protoc_insertion_point(field_mutable:message.TextChatData.msgid)
  return _s;
}
inline const std::string& TextChatData::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msgid_.Get();
}
inline void TextChatData::_internal_set_msgid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_.Set(value, GetArena());
}
inline std::string* TextChatData::_internal_mutable_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.msgid_.Mutable( GetArena());
}
inline std::string* TextChatData::release_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.TextChatData.msgid)
  return _impl_.msgid_.Release();
}
inline void TextChatData::set_allocated_msgid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msgid_.IsDefault()) {
          _impl_.msgid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.TextChatData.msgid)
}

// string msgcontent = 2;
inline void TextChatData::clear_msgcontent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgcontent_.ClearToEmpty();
}
inline const std::string& TextChatData::msgcontent() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatData.msgcontent)
  return _internal_msgcontent();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TextChatData::set_msgcontent(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgcontent_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:message.TextChatData.msgcontent)
}
inline std::string* TextChatData::mutable_msgcontent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msgcontent();
  // @@protoc_insertion_point(field_mutable:message.TextChatData.msgcontent)
  return _s;
}
inline const std::string& TextChatData::_internal_msgcontent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msgcontent_.Get();
}
inline void TextChatData::_internal_set_msgcontent(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgcontent_.Set(value, GetArena());
}
inline std::string* TextChatData::_internal_mutable_msgcontent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.msgcontent_.Mutable( GetArena());
}
inline std::string* TextChatData::release_msgcontent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:message.TextChatData.msgcontent)
  return _impl_.msgcontent_.Release();
}
inline void TextChatData::set_allocated_msgcontent(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgcontent_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msgcontent_.IsDefault()) {
          _impl_.msgcontent_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:message.TextChatData.msgcontent)
}

// -------------------------------------------------------------------

// TextChatMsgRsp

// int32 error = 1;
inline void TextChatMsgRsp::clear_error() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = 0;
}
inline ::int32_t TextChatMsgRsp::error() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.error)
  return _internal_error();
}
inline void TextChatMsgRsp::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgRsp.error)
}
inline ::int32_t TextChatMsgRsp::_internal_error() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_;
}
inline void TextChatMsgRsp::_internal_set_error(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_ = value;
}

// int32 fromuid = 2;
inline void TextChatMsgRsp::clear_fromuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = 0;
}
inline ::int32_t TextChatMsgRsp::fromuid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.fromuid)
  return _internal_fromuid();
}
inline void TextChatMsgRsp::set_fromuid(::int32_t value) {
  _internal_set_fromuid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgRsp.fromuid)
}
inline ::int32_t TextChatMsgRsp::_internal_fromuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fromuid_;
}
inline void TextChatMsgRsp::_internal_set_fromuid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fromuid_ = value;
}

// int32 touid = 3;
inline void TextChatMsgRsp::clear_touid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = 0;
}
inline ::int32_t TextChatMsgRsp::touid() const {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.touid)
  return _internal_touid();
}
inline void TextChatMsgRsp::set_touid(::int32_t value) {
  _internal_set_touid(value);
  // @@protoc_insertion_point(field_set:message.TextChatMsgRsp.touid)
}
inline ::int32_t TextChatMsgRsp::_internal_touid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.touid_;
}
inline void TextChatMsgRsp::_internal_set_touid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.touid_ = value;
}

// repeated .message.TextChatData textmsgs = 4;
inline int TextChatMsgRsp::_internal_textmsgs_size() const {
  return _internal_textmsgs().size();
}
inline int TextChatMsgRsp::textmsgs_size() const {
  return _internal_textmsgs_size();
}
inline void TextChatMsgRsp::clear_textmsgs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.textmsgs_.Clear();
}
inline ::message::TextChatData* TextChatMsgRsp::mutable_textmsgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:message.TextChatMsgRsp.textmsgs)
  return _internal_mutable_textmsgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>* TextChatMsgRsp::mutable_textmsgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:message.TextChatMsgRsp.textmsgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_textmsgs();
}
inline const ::message::TextChatData& TextChatMsgRsp::textmsgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:message.TextChatMsgRsp.textmsgs)
  return _internal_textmsgs().Get(index);
}
inline ::message::TextChatData* TextChatMsgRsp::add_textmsgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::message::TextChatData* _add = _internal_mutable_textmsgs()->Add();
  // @@protoc_insertion_point(field_add:message.TextChatMsgRsp.textmsgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>& TextChatMsgRsp::textmsgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:message.TextChatMsgRsp.textmsgs)
  return _internal_textmsgs();
}
inline const ::google::protobuf::RepeatedPtrField<::message::TextChatData>&
TextChatMsgRsp::_internal_textmsgs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.textmsgs_;
}
inline ::google::protobuf::RepeatedPtrField<::message::TextChatData>*
TextChatMsgRsp::_internal_mutable_textmsgs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.textmsgs_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace message


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_message_2eproto_2epb_2eh
